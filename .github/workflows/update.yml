name: Incremental Build Triggered By Push Events

on: repository_dispatch

concurrency: prod_environment

jobs:
  build:
    name: Retrieve docs and deploy the website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # if there's a action without sha1, it will write a cache
      # in linux-gatsby-cache-2- and will be used everytime latter action being dispatched
      - name: Bailout
        if: ${{ !github.event.client_payload.sha }}
        run: exit 1

      - uses: actions/setup-node@v2
        if: ${{ !env.ACT }}
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install yarn (ACT)
        # Since actions/setup-node currently errors out when run locally, here is a manual installation
        if: ${{ env.ACT }}
        run: |
          echo "node version:"
          node -v
          echo "npm version:"
          npm -v
          npm install -g yarn

      - name: Install deps
        run: yarn

      - name: Restore docs
        uses: actions/cache@v2
        id: docs-cache
        with:
          path: markdown-pages
          key: ${{ runner.os }}-docs-cache-202204-${{ github.event.client_payload.sha }} # You can inc the version number to force cache rebuild
          restore-keys: |
            ${{ runner.os }}-docs-cache-202204-

      - name: Check file exists
        id: check-file-exists
        if: github.event.client_payload.download_type != 'full'
        run: |
          sudo apt install tree
          tree -d ./markdown-pages
          [ "$(ls -A ./markdown-pages)" ] && echo "::set-output name=isEmpty::false" || echo "::set-output name=isEmpty::true"

      # if download_type is full, download all docs
      - name: Download all docs
        if: github.event.client_payload.download_type == 'full' || ${{ steps.check-file-exists.outputs.isEmpty }} == 'true'
        env:
          GITHUB_AUTHORIZATION_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          yarn download:tidb:en:all
          yarn download:tidb:zh:all
          yarn download:dm:all
          yarn download:tidb-operator:all
          yarn download:dbaas:all
          yarn download:appdev:all

      - name: Download specific docs
        if: github.event.client_payload.download_type == 'partial'
        env:
          GITHUB_AUTHORIZATION_TOKEN: ${{ secrets.GH_TOKEN }}
        run: eval "${{ github.event.client_payload.command }}"

      # incremental: get the base commit from cache for furthur use
      - name: Get base commit cache
        if: github.event.client_payload.download_type != 'full' && github.event.client_payload.repo != 'pingcap/website-docs'
        id: cache-commit
        run: |
          REPO=$(cut -d"/" -f2 <<< "${{ github.event.client_payload.repo }}")
          HASH=${{ github.workspace }}/markdown-pages/$REPO-${{ github.event.client_payload.ref }}.hash
          BASE=""
          if [ -f "$HASH" ]; then
            BASE=$(cat $HASH)
          fi
          echo "get base hash: $BASE"
          echo "::set-output name=path::$HASH"
          echo "::set-output name=base::$BASE"

      # incremental: download changed files
      - name: Sync docs
        if: steps.cache-commit.outputs.base != '' && github.event.client_payload.download_type != 'full' && github.event.client_payload.repo != 'pingcap/website-docs'
        env:
          GITHUB_AUTHORIZATION_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          ACT=${{ env.ACT }}
          [[ "${ACT:-false}" = "true" ]] && dryRun="true" || dryRun="false"
          yarn sync ${{ github.event.client_payload.repo }} --ref ${{ github.event.client_payload.ref }} ${{ steps.cache-commit.outputs.base }} ${{ github.event.client_payload.sha }} --dry-run $dryRun

      - name: Restore gatsby cache
        uses: actions/cache@v2
        id: gatsby-cache
        with:
          path: |
            .cache
            public
          key: ${{ runner.os }}-gatsby-cache-202204-${{ github.event.client_payload.sha }} # You can inc the version number to force cache rebuild
          restore-keys: |
            ${{ runner.os }}-gatsby-cache-202204-

      - name: Build website
        env:
          CI: true
        run: |
          yarn build --verbose

      - name: Zip public (only for testing)
        if: ${{ github.repository_owner == 'Ti-FE' }}
        run: zip public.zip -r public

      - name: Create test release (only for testing)
        uses: softprops/action-gh-release@v1
        if: ${{ github.repository_owner == 'Ti-FE' }}
        with:
          tag_name: actions/runs/${{ github.run_id }}
          files: public.zip

      - name: Update current commit sha to cache
        if: github.event.client_payload.download_type != 'full' && github.event.client_payload.repo != 'pingcap/website-docs'
        run: |
          echo ${{ github.event.client_payload.sha }} > ${{ steps.cache-commit.outputs.path }}

      # if does full building, store latest commit sha of all docs repo
      - name: Update all commit hashes
        if: github.event.client_payload.download_type == 'full'
        run: |
          bash ./scripts/get-latest-commits.sh ${{ secrets.GH_TOKEN }}
